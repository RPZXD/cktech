<?php 
session_start();
// ‡πÄ‡∏ä‡πá‡∏Ñ session ‡πÅ‡∏•‡∏∞ role
if (!isset($_SESSION['username']) || !isset($_SESSION['role']) || $_SESSION['role'] !== '‡∏Ñ‡∏£‡∏π') {
    header('Location: ../login.php');
    exit;
}
// Read configuration from JSON file
$config = json_decode(file_get_contents('../config.json'), true);
$global = $config['global'];

require_once('header.php');
?>
<style>
.toggle-switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
}
.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}
.toggle-slider {
  position: absolute;
  cursor: pointer;
  top: 0; left: 0;
  right: 0; bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 24px;
}
.toggle-slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}
input:checked + .toggle-slider {
  background-color: #4ade80; /* green-400 */
}
input:checked + .toggle-slider:before {
  transform: translateX(26px);
}
</style>

<body class="hold-transition sidebar-mini layout-fixed light-mode bg-gray-50">
<div class="wrapper">

    <?php require_once('wrapper.php');?>

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper bg-gray-50">

  <div class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
          <div class="col-sm-6">
            <h1 class="m-0 text-2xl font-bold text-blue-700 flex items-center">
              üìö ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤ 
            </h1>
          </div>
        </div>
      </div>
    </div>
    <!-- /.content-header -->

    <section class="content">
      <div class="container-fluid flex justify-center">
        <div class="w-full max-w-8xl">
          <div class="bg-white rounded-lg shadow-lg p-6">
            <div class="mb-3">
              <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded shadow flex items-center gap-2" id="btnAddSubject">
                ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤
              </button>
            </div>
            <div class="overflow-x-auto rounded shadow">
              <table class="min-w-full bg-white border border-gray-200" id="subjectTable">
                <thead class="bg-blue-100">
                  <tr>
                    <th class="py-2 px-3 border-b text-center">üî¢ ‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤</th>
                    <th class="py-2 px-3 border-b text-center">üìñ ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤</th>
                    <th class="py-2 px-3 border-b text-center">üè´ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô</th>
                    <th class="py-2 px-3 border-b text-center">üóÇÔ∏è ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                    <th class="py-2 px-3 border-b text-center">‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                    <th class="py-2 px-3 border-b text-center">üë§ ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á</th>
                    <th class="py-2 px-3 border-b text-center">‚è∞ ‡∏Ñ‡∏≤‡∏ö‡∏™‡∏≠‡∏ô</th>
                    <th class="py-2 px-3 border-b text-center">‚öôÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡πÇ‡∏î‡∏¢ JS -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      <!-- Modal -->
      <div id="modalAddSubject" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-6 relative overflow-y-auto max-h-screen">
          <button id="closeModalAddSubject" class="absolute top-2 right-2 text-gray-400 hover:text-gray-700 text-2xl">&times;</button>
          <h2 class="text-xl font-bold mb-4 flex items-center gap-2">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡∏°‡πà</h2>
          <form id="formAddSubject" class="space-y-3">
            <div>
              <label class="block mb-1 font-medium">‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤ <span class="text-red-500">* (‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ ‡πÄ‡∏ä‡πà‡∏ô ‡∏á11101)</span></label>
              <input type="text" name="code" required class="w-full border rounded px-3 py-2 focus:outline-none focus:ring focus:border-blue-300" maxlength="6" />
            </div>
            <div>
              <label class="block mb-1 font-medium">‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤ <span class="text-red-500">* (‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤)</span></label>
              <input type="text" name="name" required class="w-full border rounded px-3 py-2 focus:outline-none focus:ring focus:border-blue-300" />
            </div>
            <div>
              <label class="block mb-1 font-medium">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô <span class="text-red-500">* (‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡∏¥‡∏ä‡∏≤)</span></label>
              <select name="level" required class="w-full border rounded px-3 py-2 focus:outline-none focus:ring focus:border-blue-300">
                <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô --</option>
                <option value="1">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 1</option>
                <option value="2">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 2</option>
                <option value="3">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 3</option>
                <option value="4">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 4</option>
                <option value="5">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 5</option>
                <option value="6">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 6</option>
              </select>
            </div>
            <div>
              <label class="block mb-1 font-medium">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ß‡∏¥‡∏ä‡∏≤ <span class="text-red-500">* (‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ß‡∏¥‡∏ä‡∏≤)</span></label>
              <select name="subject_type" class="w-full border rounded px-3 py-2 focus:outline-none focus:ring focus:border-blue-300">
                <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ß‡∏¥‡∏ä‡∏≤ --</option>
                <option value="‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô">‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</option>
                <option value="‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°">‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</option>
                <option value="‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</option>
              </select>
            </div>
            <div>
              <label class="block mb-1 font-medium">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</label>
              <select name="status" class="w-full border rounded px-3 py-2 focus:outline-none focus:ring focus:border-blue-300">
                <option value="‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô">‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô</option>
                <option value="‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô">‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô</option>
              </select>
            </div>
            <div>
              <label class="block mb-1 font-medium">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô <span class="text-red-500">*</span></label>
              <div class="flex flex-wrap gap-2">
                <?php for ($i = 1; $i <= 12; $i++): ?>
                  <label class="flex items-center gap-1">
                    <input type="checkbox" name="class_room[]" value="‡∏´‡πâ‡∏≠‡∏á <?php echo $i; ?>" class="form-checkbox text-blue-600 class-room-checkbox" />
                    <span>‡∏´‡πâ‡∏≠‡∏á <?php echo $i; ?></span>
                  </label>
                <?php endfor; ?>
              </div>
            </div>
            <div id="classRoomDetails" class="space-y-4 mt-2">
              <!-- ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡πÇ‡∏î‡∏¢ JS -->
            </div>
            <div class="flex justify-end gap-2 pt-2">
              <button type="button" id="cancelAddSubject" class="px-4 py-2 rounded bg-gray-200 hover:bg-gray-300 text-gray-700">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
              <button type="submit" class="px-4 py-2 rounded bg-blue-600 hover:bg-blue-700 text-white">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
            </div>
          </form>
        </div>
      </div>
      <!-- End Modal -->
    </section>
    <!-- /.content -->
  </div>
  <!-- /.content-wrapper -->
    <?php require_once('../footer.php');?>
</div>
<!-- ./wrapper -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

<script>
const teacherId = <?php echo isset($_SESSION['username']) ? json_encode($_SESSION['username']) : 'null'; ?>;

const days = [
  { key: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå', label: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå' },
  { key: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£', label: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£' },
  { key: '‡∏û‡∏∏‡∏ò', label: '‡∏û‡∏∏‡∏ò' },
  { key: '‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ', label: '‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ' },
  { key: '‡∏®‡∏∏‡∏Å‡∏£‡πå', label: '‡∏®‡∏∏‡∏Å‡∏£‡πå' },
  { key: '‡πÄ‡∏™‡∏≤‡∏£‡πå', label: '‡πÄ‡∏™‡∏≤‡∏£‡πå' },
  { key: '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå', label: '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå' }
];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡∏ß‡∏±‡∏ô/‡∏Ñ‡∏≤‡∏ö ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡πâ‡∏≠‡∏á
function renderClassRoomDayRow(room, idx = 0) {
  return `
    <div class="flex items-end gap-2 mb-2 class-room-day-row" data-room="${room}">
      <div>
        <label class="block mb-1 font-medium">‡∏ß‡∏±‡∏ô</label>
        <select name="class_days[${room}][]" class="border rounded px-2 py-1 focus:outline-none focus:ring focus:border-blue-300" required>
          <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô</option>
          ${days.map(day => `<option value="${day.key}">${day.label}</option>`).join('')}
        </select>
      </div>
      <div>
        <label class="block mb-1 font-medium">‡∏Ñ‡∏≤‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°</label>
        <input type="number" name="period_start[${room}][]" min="1" class="w-20 border rounded px-2 py-1 focus:outline-none focus:ring focus:border-blue-300" required placeholder="‡πÄ‡∏£‡∏¥‡πà‡∏°" />
      </div>
      <div>
        <label class="block mb-1 font-medium">‡∏Ñ‡∏≤‡∏ö‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</label>
        <input type="number" name="period_end[${room}][]" min="1" class="w-20 border rounded px-2 py-1 focus:outline-none focus:ring focus:border-blue-300" required placeholder="‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î" />
      </div>
      <button type="button" class="remove-day-row bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded mb-1" title="‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß">‡∏•‡∏ö</button>
    </div>
  `;
}

function renderClassRoomDetail(room) {
  return `
    <div class="border rounded p-3 bg-gray-50 mb-2" data-room="${room}">
      <div class="font-semibold mb-2 text-blue-700">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ${room}</div>
      <div class="class-room-days-list" data-room="${room}">
        ${renderClassRoomDayRow(room, 0)}
      </div>
      <button type="button" class="add-day-row bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded mt-2" data-room="${room}">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô/‡∏Ñ‡∏≤‡∏ö</button>
    </div>
  `;
}

function renderClassDetailButton(subjectId) {
  return `<button class="bg-blue-500 hover:bg-blue-600 text-white px-2 py-1 rounded btn-detail flex items-center gap-1" data-id="${subjectId}">
    üëÅÔ∏è ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
  </button>`;
}

function renderClassPeriods(periods) {
  if (!periods || periods.length === 0) return '-';
  return periods.map(p =>
    `${p.class_room} (${p.day_of_week} ${p.period_start}-${p.period_end})`
  ).join('<br>');
}

function renderStatusSwitch(subject) {
  const checked = subject.status === '‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô' ? 'checked' : '';
  return `
    <label class="toggle-switch">
      <input type="checkbox" class="status-switch" data-id="${subject.id}" ${checked}>
      <span class="toggle-slider"></span>
    </label>
    <span class="ml-2">${subject.status === '‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô' ? '‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô' : '‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô'}</span>
  `;
}


document.addEventListener('DOMContentLoaded', function() {
  loadSubjects();

  function statusBadge(status) {
    if (status === '‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô') {
      return '<span class="inline-block px-2 py-1 text-xs rounded bg-green-100 text-green-700">‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô</span>';
    } else {
      return '<span class="inline-block px-2 py-1 text-xs rounded bg-gray-200 text-gray-600">‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô</span>';
    }
  }

  function loadSubjects() {
    fetch('../controllers/SubjectController.php?action=list&teacherId=' + encodeURIComponent(teacherId))
      .then(res => res.json())
      .then(data => {
        const tbody = document.querySelector('#subjectTable tbody');
        tbody.innerHTML = '';
        console.log('Subjects:', data); // Log the subjects data
        data.forEach(subject => {
          tbody.innerHTML += `
            <tr class="hover:bg-blue-50">
              <td class="py-2 px-3 border-b text-center">${subject.code}</td>
              <td class="py-2 px-3 border-b">${subject.name}</td>
              <td class="py-2 px-3 border-b text-center">${subject.level}</td>
              <td class="py-2 px-3 border-b text-center">${subject.subject_type || ''}</td>
              <td class="py-2 px-3 border-b text-center">${renderStatusSwitch(subject)}</td>
              <td class="py-2 px-3 border-b text-center">${subject.username || '-'}</td>
              <td class="py-2 px-3 border-b text-center">${renderClassDetailButton(subject.id)}</td>
              <td class="py-2 px-3 border-b text-center flex gap-2 justify-center">
                <button class="bg-yellow-400 hover:bg-yellow-500 text-white px-2 py-1 rounded mr-1 btn-edit flex items-center gap-1" data-id="${subject.id}">
                  ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                </button>
                <button class="bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded btn-delete flex items-center gap-1" data-id="${subject.id}">
                  üóëÔ∏è ‡∏•‡∏ö
                </button>
              </td>
            </tr>
          `;
        });

        // Event: ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        document.querySelectorAll('.btn-detail').forEach(btn => {
          btn.addEventListener('click', function() {
            const subjectId = btn.getAttribute('data-id');
            showSubjectDetail(subjectId);
          });
        });

        // Event: ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤
        document.querySelectorAll('.btn-delete').forEach(btn => {
          btn.addEventListener('click', function() {
            const subjectId = btn.getAttribute('data-id');
            Swal.fire({
              title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö',
              text: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonText: '‡∏•‡∏ö',
              cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
            }).then(result => {
              if (result.isConfirmed) {
                fetch('../controllers/SubjectController.php?action=delete', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ id: subjectId })
                })
                .then(res => res.json())
                .then(result => {
                  if (result.success) {
                    Swal.fire('‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
                    loadSubjects();
                  } else {
                    Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÑ‡∏î‡πâ', 'error');
                  }
                })
                .catch(() => {
                  Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠', 'error');
                });
              }
            });
          });
        });

        // Event: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤ (‡πÅ‡∏™‡∏î‡∏á modal ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°)
        document.querySelectorAll('.btn-edit').forEach(btn => {
          btn.addEventListener('click', function() {
            const subjectId = btn.getAttribute('data-id');
            fetch('../controllers/SubjectController.php?action=detail&subjectId=' + encodeURIComponent(subjectId))
              .then(res => res.json())
              .then(data => {
                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• subject ‡∏´‡∏•‡∏±‡∏Å
                const subject = data.subject;
                const classes = data.classes || [];
                if (!subject) {
                  Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç', 'error');
                  return;
                }
                // ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
                form.code.value = subject.code;
                form.name.value = subject.name;
                form.level.value = subject.level;
                form.subject_type.value = subject.subject_type;
                form.status.value = subject.status;

                // --- ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≤‡∏ö‡∏™‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ---
                // 1. ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå checkbox ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                document.querySelectorAll('.class-room-checkbox').forEach(cb => cb.checked = false);
                // 2. ‡∏´‡∏≤ unique ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏≤‡∏Å classes
                const uniqueRooms = [...new Set(classes.map(c => c.class_room))];
                // 3. ‡πÄ‡∏ä‡πá‡∏Ñ checkbox ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô classes
                uniqueRooms.forEach(room => {
                  const cb = Array.from(document.querySelectorAll('.class-room-checkbox')).find(cb => cb.value === room);
                  if (cb) cb.checked = true;
                });
                // 4. render ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                updateClassRoomDetails();
                // 5. ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô/‡∏Ñ‡∏≤‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡πâ‡∏≠‡∏á
                uniqueRooms.forEach(room => {
                  const roomClasses = classes.filter(c => c.class_room === room);
                  const list = classRoomDetails.querySelector(`.class-room-days-list[data-room="${room}"]`);
                  if (list) {
                    list.innerHTML = '';
                    roomClasses.forEach((c, idx) => {
                      // render row
                      list.insertAdjacentHTML('beforeend', renderClassRoomDayRow(room, idx));
                    });
                    // ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô input
                    const rows = list.querySelectorAll('.class-room-day-row');
                    roomClasses.forEach((c, idx) => {
                      const row = rows[idx];
                      if (row) {
                        row.querySelector(`select[name="class_days[${room}][]"]`).value = c.day_of_week;
                        row.querySelector(`input[name="period_start[${room}][]"]`).value = c.period_start;
                        row.querySelector(`input[name="period_end[${room}][]"]`).value = c.period_end;
                      }
                    });
                  }
                });

                modal.classList.remove('hidden');
                form.setAttribute('data-mode', 'edit');
                form.setAttribute('data-id', subjectId);
              });
          });
        });

        // Event: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ slide switch
        document.querySelectorAll('.status-switch').forEach(sw => {
          sw.addEventListener('change', function() {
            const subjectId = this.getAttribute('data-id');
            const newStatus = this.checked ? '‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô' : '‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≠‡∏ô';

            fetch('../controllers/SubjectController.php?action=updateStatus', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ id: subjectId, status: newStatus })
            })
            .then(res => res.json())
            .then(result => {
              if (result.success) {
                Swal.fire('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
              } else {
                Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'error');
                this.checked = !this.checked; // ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
              }
              loadSubjects(); // ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            })
            .catch(err => {
              console.error(err);
              Swal.fire('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï', 'error');
              this.checked = !this.checked;
              loadSubjects();
            });
          });
        });
      });
  }

  // Modal logic
  const modal = document.getElementById('modalAddSubject');
  const btnAdd = document.getElementById('btnAddSubject');
  const btnClose = document.getElementById('closeModalAddSubject');
  const btnCancel = document.getElementById('cancelAddSubject');
  const form = document.getElementById('formAddSubject');

  btnAdd.addEventListener('click', () => {
    modal.classList.remove('hidden');
  });
  btnClose.addEventListener('click', () => {
    modal.classList.add('hidden');
    form.reset();
  });
  btnCancel.addEventListener('click', () => {
    modal.classList.add('hidden');
    form.reset();
  });

  // (Optional) ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.add('hidden');
      form.reset();
    }
  });

  // ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô checkbox logic
  const classRoomCheckboxes = document.querySelectorAll('.class-room-checkbox');
  const classRoomDetails = document.getElementById('classRoomDetails');

  function updateClassRoomDetails() {
    classRoomDetails.innerHTML = '';
    document.querySelectorAll('.class-room-checkbox:checked').forEach(cb => {
      const room = cb.value;
      classRoomDetails.innerHTML += renderClassRoomDetail(room);
    });
    bindDayRowEvents();
  }

  classRoomCheckboxes.forEach(cb => {
    cb.addEventListener('change', updateClassRoomDetails);
  });

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô bind event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ß‡∏±‡∏ô/‡∏Ñ‡∏≤‡∏ö
  function bindDayRowEvents() {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô/‡∏Ñ‡∏≤‡∏ö
    document.querySelectorAll('.add-day-row').forEach(btn => {
      btn.onclick = function() {
        const room = btn.getAttribute('data-room');
        const list = classRoomDetails.querySelector(`.class-room-days-list[data-room="${room}"]`);
        list.insertAdjacentHTML('beforeend', renderClassRoomDayRow(room));
        bindDayRowEvents();
      };
    });
    // ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß
    document.querySelectorAll('.remove-day-row').forEach(btn => {
      btn.onclick = function() {
        const row = btn.closest('.class-room-day-row');
        if (row.parentNode.childElementCount > 1) {
          row.remove();
        }
      };
    });
  }

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠ bind event
  bindDayRowEvents();

  // ====== ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö submit ‡∏ü‡∏≠‡∏£‡πå‡∏° ======
  form.addEventListener('submit', function(e) {
    e.preventDefault();

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• subject
    const formData = new FormData(form);
    const subjectData = {
      code: formData.get('code'),
      name: formData.get('name'),
      level: formData.get('level'),
      subject_type: formData.get('subject_type'),
      status: formData.get('status')
    };

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• subject_classes
    const classRooms = [];
    document.querySelectorAll('.class-room-checkbox:checked').forEach(cb => {
      const room = cb.value;
      const days = formData.getAll(`class_days[${room}][]`);
      const periodStarts = formData.getAll(`period_start[${room}][]`);
      const periodEnds = formData.getAll(`period_end[${room}][]`);
      for (let i = 0; i < days.length; i++) {
        classRooms.push({
          class_room: room,
          day_of_week: days[i],
          period_start: periodStarts[i],
          period_end: periodEnds[i]
        });
      }
    });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏´‡∏°‡∏î
    const mode = form.getAttribute('data-mode');
    const subjectId = form.getAttribute('data-id');

    let url = '../controllers/SubjectController.php?action=create';
    let method = 'POST';
    let body = JSON.stringify({
      ...subjectData,
      class_rooms: classRooms
    });

    if (mode === 'edit' && subjectId) {
      url = '../controllers/SubjectController.php?action=update';
      body = JSON.stringify({
        id: subjectId,
        ...subjectData,
        class_rooms: classRooms
      });
    }

    fetch(url, {
      method: method,
      headers: { 'Content-Type': 'application/json' },
      body: body
    })
    .then(res => res.json())
    .then(result => {
      if (result.success) {
        Swal.fire('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', mode === 'edit' ? '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
        modal.classList.add('hidden');
        form.reset();
        form.removeAttribute('data-mode');
        form.removeAttribute('data-id');
        loadSubjects();
      } else {
        Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', mode === 'edit' ? '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÑ‡∏î‡πâ' : '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÑ‡∏î‡πâ', 'error');
      }
    })
    .catch(() => {
      Swal.fire('‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠', 'error');
    });
  });

});

// Modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≤‡∏ö‡∏™‡∏≠‡∏ô
function showSubjectDetail(subjectId) {
  fetch('../controllers/SubjectController.php?action=detail&subjectId=' + encodeURIComponent(subjectId))
    .then(res => res.json())
    .then(data => {
      let html = `<div class="text-lg font-bold mb-2">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≤‡∏ö‡∏™‡∏≠‡∏ô</div>`;
      let classes = Array.isArray(data) ? data : (data.classes || []);
      if (classes.length > 0) {
        html += `<table class="w-full border-collapse border border-gray-200 mb-4 rounded shadow text-base">
          <thead class="bg-blue-500 text-white text-center "><tr>
            <th class="border px-2 py-1">‡∏´‡πâ‡∏≠‡∏á</th>
            <th class="border px-2 py-1">‡∏ß‡∏±‡∏ô</th>
            <th class="border px-2 py-1">‡∏Ñ‡∏≤‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°</th>
            <th class="border px-2 py-1">‡∏Ñ‡∏≤‡∏ö‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</th>
          </tr></thead>
          <tbody>
          ${classes.map(row => `
            <tr>
              <td class="border px-2 py-1">${row.class_room}</td>
              <td class="border px-2 py-1">${row.day_of_week}</td>
              <td class="border px-2 py-1">${row.period_start}</td>
              <td class="border px-2 py-1">${row.period_end}</td>
            </tr>
          `).join('')}
          </tbody>
        </table>`;
      } else {
        html += `<div class="text-gray-500">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≤‡∏ö‡∏™‡∏≠‡∏ô</div>`;
      }
      Swal.fire({
        html: html,
        width: 600,
        showCloseButton: true,
        showConfirmButton: false
      });
    });
}
</script>
<?php require_once('script.php'); ?>
</body>
</html>
