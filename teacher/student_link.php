<?php 
session_start();
// ‡πÄ‡∏ä‡πá‡∏Ñ session ‡πÅ‡∏•‡∏∞ role
if (!isset($_SESSION['username']) || !isset($_SESSION['role']) || $_SESSION['role'] !== '‡∏Ñ‡∏£‡∏π') {
    header('Location: ../login.php');
    exit;
}
// Read configuration from JSON file
$config = json_decode(file_get_contents('../config.json'), true);
$global = $config['global'];
require_once('../classes/DatabaseTeachingReport.php');
require_once('../classes/DatabaseUsers.php');
$teacherId = $_SESSION['user']['Teach_id'];

$db = new \App\DatabaseTeachingReport();
$dbUser = new \App\DatabaseUsers();
$pdo = $db->getPDO();
$pdoUser = $dbUser->getPDO();

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏π
$teacherMajor = '';
$stmtTeacher = $pdoUser->prepare("SELECT Teach_major FROM teacher WHERE Teach_id = ?");
$stmtTeacher->execute([$teacherId]);
$teacher = $stmtTeacher->fetch();
if ($teacher) {
    $teacherMajor = $teacher['Teach_major'];
}

// ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏π
$stmt = $pdo->prepare("SELECT id, name, code, level FROM subjects WHERE created_by = ? ORDER BY code");
$stmt->execute([$teacherId]);
$subjects = $stmt->fetchAll();

$baseUrl = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]/student/analyze.php";

require_once('header.php');
?>


<body class="hold-transition sidebar-mini layout-fixed light-mode bg-gray-50">
<div class="wrapper">

    <?php require_once('wrapper.php');?>

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper bg-gray-50 min-h-screen p-4">
    <div class="max-w-8xl mx-auto bg-white rounded-xl shadow-lg p-6">
        <h1 class="text-2xl font-bold text-blue-700 mb-4 flex items-center gap-2">üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</h1>
        <div class="mb-6 text-lg text-gray-700 flex items-center gap-2">
            <span class="inline-block rounded-full bg-blue-100 px-3 py-1 text-blue-700 font-semibold shadow-sm">üë®‚Äçüè´ <?= htmlspecialchars($_SESSION['user']['Teach_name'] ?? '') ?></span>
        </div>

        <!-- Tabs -->
        <div class="mb-6">
            <ul class="flex border-b" id="studentTabs">
                <li><button class="tab-btn px-4 py-2 font-semibold text-blue-700 border-b-2 border-blue-700 bg-blue-50" data-tab="tab-link">üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</button></li>
                <li><button class="tab-btn px-4 py-2 font-semibold text-gray-600 hover:text-blue-700" data-tab="tab-report">üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•</button></li>
                <li><button class="tab-btn px-4 py-2 font-semibold text-gray-600 hover:text-blue-700" data-tab="tab-all">üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button></li>
            </ul>
        </div>

        <!-- Tab: ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô -->
        <div id="tab-link" class="tab-content">
            <?php if (empty($subjects)): ?>
                <div class="text-gray-500 text-center py-10 text-xl">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</div>
            <?php else: ?>
                <div class="overflow-x-auto">
                    <table class="min-w-full border border-gray-300 rounded-lg overflow-hidden">
                        <thead>
                            <tr class="bg-blue-100">
                                <th class="border px-3 py-2 text-center">‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤</th>
                                <th class="border px-3 py-2 text-center">‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤</th>
                                <th class="border px-3 py-2 text-center">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô</th>
                                <th class="border px-3 py-2 text-center">‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</th>
                                <th class="border px-3 py-2 text-center">‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach ($subjects as $sub): ?>
                                <tr class="hover:bg-blue-50">
                                    <td class="border px-3 py-2 text-center"><?= htmlspecialchars($sub['code']) ?></td>
                                    <td class="border px-3 py-2"><?= htmlspecialchars($sub['name']) ?></td>
                                    <td class="border px-3 py-2 text-center"><?= '‡∏°.' . intval($sub['level']) ?></td>
                                    <td class="border px-3 py-2 text-center">
                                        <a href="<?= $baseUrl . '?subject_id=' . $sub['id'] ?>" target="_blank" class="text-blue-600 underline">
                                            <?= $baseUrl . '?subject_id=' . $sub['id'] ?>
                                        </a>
                                    </td>
                                    <td class="border px-3 py-2 text-center">
                                        <button class="copy-link-btn bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded" data-link="<?= $baseUrl . '?subject_id=' . $sub['id'] ?>">‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å</button>
                                    </td>
                                </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
                </div>
                <div class="mt-6 text-gray-600 text-sm">
                    <span class="font-bold text-blue-700">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</span> ‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡πâ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
                </div>
            <?php endif; ?>
        </div>

        <!-- Tab: ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• -->
        <div id="tab-report" class="tab-content hidden">
            <div class="mb-4 flex items-center gap-2">
                <label class="font-semibold">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤:</label>
                <select id="reportSubject" class="border rounded px-2 py-1 ml-2">
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤ --</option>
                    <?php foreach ($subjects as $sub): ?>
                        <option value="<?= $sub['id'] ?>"><?= htmlspecialchars($sub['name']) ?> (<?= htmlspecialchars($sub['code']) ?>)</option>
                    <?php endforeach; ?>
                </select>
                <button id="printReportBtn" class="ml-auto bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded shadow flex items-center gap-2 print:hidden">
                    üñ®Ô∏è ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•
                </button>
                <button id="excelReportBtn" class="ml-2 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow flex items-center gap-2 print:hidden">
                    üìä ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å Excel
                </button>
            </div>
            <div id="reportContent" class="mt-4">
                <div class="text-gray-400 text-center">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</div>
            </div>
        </div>

        <!-- Tab: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î -->
        <div id="tab-all" class="tab-content hidden">
            <div class="mb-4 flex items-center gap-2">
                <label class="font-semibold">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤:</label>
                <select id="allSubject" class="border rounded px-2 py-1 ml-2">
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤ --</option>
                    <?php foreach ($subjects as $sub): ?>
                        <option value="<?= $sub['id'] ?>"><?= htmlspecialchars($sub['name']) ?> (<?= htmlspecialchars($sub['code']) ?>)</option>
                    <?php endforeach; ?>
                </select>
                <input type="text" id="searchStudent" class="border rounded px-2 py-1 ml-2" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠/‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà/‡∏´‡πâ‡∏≠‡∏á">
                <button id="printAllBtn" class="ml-auto bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded shadow flex items-center gap-2 print:hidden">
                    üñ®Ô∏è ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                </button>
                <button id="excelAllBtn" class="ml-2 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow flex items-center gap-2 print:hidden">
                    üìä ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å Excel
                </button>
            </div>
            <div id="allContent" class="mt-4">
                <div class="text-gray-400 text-center">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>
            </div>
        </div>
    </div>
</div>
  <!-- /.content-wrapper -->
    <?php require_once('../footer.php');?>
</div>
<!-- ./wrapper -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ teacher major
    const teacherMajor = <?= json_encode($teacherMajor) ?>;
    const teacherName = <?= json_encode($_SESSION['user']['Teach_name'] ?? '') ?>;
    
    // Tab switch
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('border-b-2', 'border-blue-700', 'bg-blue-50', 'text-blue-700'));
            btn.classList.add('border-b-2', 'border-blue-700', 'bg-blue-50', 'text-blue-700');
            document.querySelectorAll('.tab-content').forEach(tab => tab.classList.add('hidden'));
            document.getElementById(btn.dataset.tab).classList.remove('hidden');
        });
    });

    // Copy link
    document.querySelectorAll('.copy-link-btn').forEach(function(btn) {
        btn.addEventListener('click', function() {
            const link = btn.getAttribute('data-link');
            navigator.clipboard.writeText(link).then(function() {
                btn.textContent = '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß!';
                setTimeout(() => { btn.textContent = '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å'; }, 1200);
            });
        });
    });

    // ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• (‡∏Å‡∏£‡∏≤‡∏ü)
    $('#reportSubject').on('change', function() {
        const subjectId = $(this).val();
        if (!subjectId) {
            $('#reportContent').html('<div class="text-gray-400 text-center">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</div>');
            return;
        }
        $('#reportContent').html('<div class="text-gray-400 text-center">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>');
        $.getJSON('../controllers/StudentAnalyzeController.php?subject_id=' + subjectId, function(res) {
            if (!res.success || !res.data.length) {
                $('#reportContent').html('<div class="text-gray-400 text-center">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</div>');
                return;
            }
            // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
            let male = 0, female = 0, other = 0;
            let likeSubjects = {};
            let gpaArr = [], comArr = [];
            let roomSet = {};
            res.data.forEach(row => {
                // ‡πÄ‡∏û‡∏®‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤
                if (row.prefix.startsWith('‡∏î.‡∏ä.') || row.prefix.startsWith('‡∏ô‡∏≤‡∏¢')) male++;
                else if (row.prefix.startsWith('‡∏î.‡∏ç.') || row.prefix.startsWith('‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß') || row.prefix.startsWith('‡∏ô.‡∏™.') || row.prefix.startsWith('‡∏ô‡∏≤‡∏á')) female++;
                else other++;
                // ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö
                (row.like_subjects || '').split(',').forEach(s => {
                    s = s.trim();
                    if (s) likeSubjects[s] = (likeSubjects[s]||0)+1;
                });
                // ‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
                if (!isNaN(parseFloat(row.gpa))) gpaArr.push(parseFloat(row.gpa));
                // ‡πÄ‡∏Å‡∏£‡∏î‡∏Ñ‡∏≠‡∏°
                if (!isNaN(parseFloat(row.last_com_grade))) comArr.push(parseFloat(row.last_com_grade));
                // ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                if (row.student_level_room) roomSet[row.student_level_room] = true;
            });
            // ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏û‡∏®
            let genderCanvas = '<canvas id="genderChart" height="60"></canvas>';
            // ‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö
            let likeSubjectsCanvas = '<canvas id="likeSubjectsChart" height="120"></canvas>';
            // ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
            let gpaAvg = gpaArr.length ? (gpaArr.reduce((a,b)=>a+b,0)/gpaArr.length).toFixed(2) : '-';
            let comAvg = comArr.length ? (comArr.reduce((a,b)=>a+b,0)/comArr.length).toFixed(2) : '-';
            let totalStudents = res.data.length;
            let totalRooms = Object.keys(roomSet).length;

            // ‡∏¢‡πâ‡∏≤‡∏¢‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
            let likeLabels = Object.keys(likeSubjects).sort((a,b)=>likeSubjects[b]-likeSubjects[a]).slice(0,5);
            let likeData = likeLabels.map(l=>likeSubjects[l]);

            // ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
            let weightArr = [], heightArr = [];
            let diseaseCount = {}, activityCount = {}, skillCount = {};
            let liveWithCount = {};
            res.data.forEach(row => {
                // ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á
                if (!isNaN(parseFloat(row.weight))) weightArr.push(parseFloat(row.weight));
                if (!isNaN(parseFloat(row.height))) heightArr.push(parseFloat(row.height));
                
                // ‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß
                let disease = (row.disease || '').trim();
                if (disease && disease !== '-' && disease !== '‡πÑ‡∏°‡πà‡∏°‡∏µ') {
                    diseaseCount[disease] = (diseaseCount[disease] || 0) + 1;
                }
                
                // ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö
                (row.favorite_activity || '').split(',').forEach(act => {
                    act = act.trim();
                    if (act) activityCount[act] = (activityCount[act] || 0) + 1;
                });
                
                // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©
                (row.special_skill || '').split(',').forEach(skill => {
                    skill = skill.trim();
                    if (skill) skillCount[skill] = (skillCount[skill] || 0) + 1;
                });
                
                // ‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏Å‡∏±‡∏ö
                let liveWith = (row.live_with || '').trim();
                if (liveWith) liveWithCount[liveWith] = (liveWithCount[liveWith] || 0) + 1;
            });
            
            let weightAvg = weightArr.length ? (weightArr.reduce((a,b)=>a+b,0)/weightArr.length).toFixed(1) : '-';
            let heightAvg = heightArr.length ? (heightArr.reduce((a,b)=>a+b,0)/heightArr.length).toFixed(1) : '-';
            
            $('#reportContent').html(`
                <div class="grid grid-cols-2 gap-8">
                    <!-- Chart 1: ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏® -->
                    <div class="flex flex-col h-full">
                        <div class="font-bold mb-2">‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏®</div>
                        <div class="flex-1 flex items-center justify-center h-[220px]">
                            ${genderCanvas}
                        </div>
                        <div class="mt-2 text-sm text-gray-600">
                            <div>‡∏ä‡∏≤‡∏¢: ${male} ‡∏Ñ‡∏ô (${((male/totalStudents)*100).toFixed(1)}%)</div>
                            <div>‡∏´‡∏ç‡∏¥‡∏á: ${female} ‡∏Ñ‡∏ô (${((female/totalStudents)*100).toFixed(1)}%)</div>
                            ${other > 0 ? `<div>‡∏≠‡∏∑‡πà‡∏ô‡πÜ: ${other} ‡∏Ñ‡∏ô (${((other/totalStudents)*100).toFixed(1)}%)</div>` : ''}
                        </div>
                    </div>
                    <!-- Chart 2: ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ä‡∏≠‡∏ö (Top 5) -->
                    <div class="flex flex-col h-full">
                        <div class="font-bold mb-2">‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ä‡∏≠‡∏ö (Top 5)</div>
                        <div class="flex-1 flex items-center justify-center h-[220px]">
                            ${likeSubjectsCanvas}
                        </div>
                        <div class="mt-2 text-sm text-gray-600">
                            ${likeLabels.map((label, i) => `<div>${i+1}. ${label}: ${likeData[i]} ‡∏Ñ‡∏ô</div>`).join('')}
                        </div>
                    </div>
                </div>

                
                <div class="mt-8 grid grid-cols-2 md:grid-cols-4 gap-4">
                    <div class="bg-blue-50 rounded p-4 text-center">
                        <div class="font-bold text-blue-700">‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (GPA)</div>
                        <div class="text-3xl font-extrabold text-blue-600">${gpaAvg}</div>
                    </div>
                    <div class="bg-green-50 rounded p-4 text-center">
                        <div class="font-bold text-green-700">‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤${teacherMajor || ''}</div>
                        <div class="text-3xl font-extrabold text-green-600">${comAvg}</div>
                    </div>
                    <div class="bg-yellow-50 rounded p-4 text-center">
                        <div class="font-bold text-yellow-700">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                        <div class="text-3xl font-extrabold text-yellow-600">${totalStudents}</div>
                    </div>
                    <div class="bg-purple-50 rounded p-4 text-center">
                        <div class="font-bold text-purple-700">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</div>
                        <div class="text-3xl font-extrabold text-purple-600">${totalRooms}</div>
                    </div>
                </div>
                
                <div class="mt-8 grid grid-cols-2 gap-8">
                    <div class="bg-orange-50 rounded p-4">
                        <div class="font-bold text-orange-700 mb-2">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏¢</div>
                        <div class="text-sm">
                            <div>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: <span class="font-semibold">${weightAvg} ‡∏Å‡∏Å.</span></div>
                            <div>‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: <span class="font-semibold">${heightAvg} ‡∏ã‡∏°.</span></div>
                        </div>
                    </div>
                    <div class="bg-pink-50 rounded p-4">
                        <div class="font-bold text-pink-700 mb-2">‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢</div>
                        <div class="text-sm">
                            ${Object.entries(liveWithCount).sort((a,b)=>b[1]-a[1]).slice(0,3).map(([key, val]) => 
                                `<div>${key}: ${val} ‡∏Ñ‡∏ô (${((val/totalStudents)*100).toFixed(1)}%)</div>`
                            ).join('')}
                        </div>
                    </div>
                </div>

                <div class="mt-8 grid grid-cols-3 gap-6">
                    <div class="bg-gray-50 rounded p-4">
                        <div class="font-bold text-gray-700 mb-2">‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß (Top 5)</div>
                        <div class="text-sm">
                            ${Object.entries(diseaseCount).sort((a,b)=>b[1]-a[1]).slice(0,5).map(([key, val]) => 
                                `<div>‚Ä¢ ${key}: ${val} ‡∏Ñ‡∏ô</div>`
                            ).join('') || '<div class="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>'}
                        </div>
                    </div>
                    <div class="bg-cyan-50 rounded p-4">
                        <div class="font-bold text-cyan-700 mb-2">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö (Top 5)</div>
                        <div class="text-sm">
                            ${Object.entries(activityCount).sort((a,b)=>b[1]-a[1]).slice(0,5).map(([key, val]) => 
                                `<div>‚Ä¢ ${key}: ${val} ‡∏Ñ‡∏ô</div>`
                            ).join('') || '<div class="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>'}
                        </div>
                    </div>
                    <div class="bg-indigo-50 rounded p-4">
                        <div class="font-bold text-indigo-700 mb-2">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏© (Top 5)</div>
                        <div class="text-sm">
                            ${Object.entries(skillCount).sort((a,b)=>b[1]-a[1]).slice(0,5).map(([key, val]) => 
                                `<div>‚Ä¢ ${key}: ${val} ‡∏Ñ‡∏ô</div>`
                            ).join('') || '<div class="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>'}
                        </div>
                    </div>
                </div>

            `);

            // Chart ‡πÄ‡∏û‡∏®
            new Chart(document.getElementById('genderChart'), {
                type: 'doughnut',
                data: {
                    labels: ['‡∏ä‡∏≤‡∏¢', '‡∏´‡∏ç‡∏¥‡∏á', '‡∏≠‡∏∑‡πà‡∏ô‡πÜ'],
                    datasets: [{
                        data: [male, female, other],
                        backgroundColor: ['#60a5fa', '#f472b6', '#fbbf24']
                    }]
                },
                options: {responsive: true, plugins: {legend: {position: 'bottom'}}}
            });
            // Chart ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö
            new Chart(document.getElementById('likeSubjectsChart'), {
                type: 'bar',
                data: {
                    labels: likeLabels,
                    datasets: [{
                        label: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô',
                        data: likeData,
                        backgroundColor: '#38bdf8'
                    }]
                },
                options: {responsive: true, plugins: {legend: {display: false}}}
            });
        });
    });

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    $('#allSubject').on('change', loadAllStudents);
    $('#searchStudent').on('input', loadAllStudents);

    function loadAllStudents() {
        const subjectId = $('#allSubject').val();
        const search = $('#searchStudent').val().toLowerCase();
        if (!subjectId) {
            $('#allContent').html('<div class="text-gray-400 text-center">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>');
            return;
        }
        $('#allContent').html('<div class="text-gray-400 text-center">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>');
        $.getJSON('../controllers/StudentAnalyzeController.php?subject_id=' + subjectId, function(res) {
            if (!res.success || !res.data.length) {
                $('#allContent').html('<div class="text-gray-400 text-center">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</div>');
                return;
            }
            let html = `
                <div class="overflow-x-auto">
                <table class="min-w-full border border-gray-300 rounded-lg overflow-hidden text-xs md:text-sm">
                    <thead>
                        <tr class="bg-blue-100">
                            <th class="border px-2 py-1">‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà</th>
                            <th class="border px-2 py-1">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•</th>
                            <th class="border px-2 py-1">‡∏´‡πâ‡∏≠‡∏á</th>
                            <th class="border px-2 py-1">‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</th>
                            <th class="border px-2 py-1">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</th>
                            <th class="border px-2 py-1">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å</th>
                            <th class="border px-2 py-1">‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á</th>
                            <th class="border px-2 py-1">‡πÇ‡∏£‡∏Ñ</th>
                            <th class="border px-2 py-1">‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á</th>
                            <th class="border px-2 py-1">‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏Å‡∏±‡∏ö</th>
                            <th class="border px-2 py-1">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</th>
                            <th class="border px-2 py-1">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á</th>
                            <th class="border px-2 py-1">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</th>
                            <th class="border px-2 py-1">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©</th>
                            <th class="border px-2 py-1">GPA</th>
                            <th class="border px-2 py-1">‡πÄ‡∏Å‡∏£‡∏î‡∏Ñ‡∏≠‡∏°</th>
                            <th class="border px-2 py-1">‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö</th>
                            <th class="border px-2 py-1">‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö</th>
                        </tr>
                    </thead>
                    <tbody>
            `;
            res.data.forEach(row => {
                let searchText = [
                    row.student_no, row.student_firstname, row.student_lastname, row.student_level_room
                ].join(' ').toLowerCase();
                if (search && !searchText.includes(search)) return;
                html += `
                    <tr class="hover:bg-blue-50">
                        <td class="border px-2 py-1 text-center">${row.student_no}</td>
                        <td class="border px-2 py-1">${row.prefix} ${row.student_firstname} ${row.student_lastname}</td>
                        <td class="border px-2 py-1 text-center">${row.student_level_room}</td>
                        <td class="border px-2 py-1 text-center">${row.prefix}</td>
                        <td class="border px-2 py-1 text-center">${row.student_phone}</td>
                        <td class="border px-2 py-1 text-center">${row.weight}</td>
                        <td class="border px-2 py-1 text-center">${row.height}</td>
                        <td class="border px-2 py-1">${row.disease}</td>
                        <td class="border px-2 py-1">${row.parent_name}</td>
                        <td class="border px-2 py-1">${row.live_with}</td>
                        <td class="border px-2 py-1">${row.address}</td>
                        <td class="border px-2 py-1 text-center">${row.parent_phone}</td>
                        <td class="border px-2 py-1">${row.favorite_activity}</td>
                        <td class="border px-2 py-1">${row.special_skill}</td>
                        <td class="border px-2 py-1 text-center">${row.gpa}</td>
                        <td class="border px-2 py-1 text-center">${row.last_com_grade}</td>
                        <td class="border px-2 py-1">${row.like_subjects}</td>
                        <td class="border px-2 py-1">${row.dislike_subjects}</td>
                    </tr>
                `;
            });
            html += '</tbody></table></div>';
            $('#allContent').html(html);
        });
    }

    // Print buttons
    $('#printReportBtn').on('click', function() {
        const subjectId = $('#reportSubject').val();
        if (!subjectId) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡πà‡∏≠‡∏ô');
            return;
        }
        const subjectOption = $('#reportSubject option:selected');
        const subjectText = subjectOption.text();
        const subjectName = subjectText.split('(')[0].trim();
        const subjectCode = subjectText.match(/\(([^)]+)\)/)?.[1] || '';
        
        // ‡∏´‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤
        const subjects = <?= json_encode($subjects) ?>;
        const selectedSubject = subjects.find(s => s.id == subjectId);
        const level = selectedSubject ? selectedSubject.level : '';
        
        const tab = document.getElementById('reportContent');
        printReportSection(tab, subjectName, subjectCode, level, '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥');
    });
    
    $('#printAllBtn').on('click', function() {
        const subjectId = $('#allSubject').val();
        if (!subjectId) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡πà‡∏≠‡∏ô');
            return;
        }
        const subjectOption = $('#allSubject option:selected');
        const subjectText = subjectOption.text();
        const subjectName = subjectText.split('(')[0].trim();
        const subjectCode = subjectText.match(/\(([^)]+)\)/)?.[1] || '';
        
        // ‡∏´‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤
        const subjects = <?= json_encode($subjects) ?>;
        const selectedSubject = subjects.find(s => s.id == subjectId);
        const level = selectedSubject ? selectedSubject.level : '';
        
        const tab = document.getElementById('allContent');
        printReportSection(tab, subjectName, subjectCode, level, '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    });

    // Excel export buttons
    $('#excelReportBtn').on('click', function() {
        const subjectId = $('#reportSubject').val();
        if (!subjectId) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡πà‡∏≠‡∏ô');
            return;
        }
        exportReportToExcel(subjectId);
    });
    
    $('#excelAllBtn').on('click', function() {
        const subjectId = $('#allSubject').val();
        if (!subjectId) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡πà‡∏≠‡∏ô');
            return;
        }
        exportAllToExcel(subjectId);
    });

    function exportReportToExcel(subjectId) {
        $.getJSON('../controllers/StudentAnalyzeController.php?subject_id=' + subjectId, function(res) {
            if (!res.success || !res.data.length) {
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô');
                return;
            }
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
            let male = 0, female = 0, other = 0;
            let likeSubjects = {}, gpaArr = [], comArr = [];
            res.data.forEach(row => {
                if (row.prefix.startsWith('‡∏î.‡∏ä.') || row.prefix.startsWith('‡∏ô‡∏≤‡∏¢')) male++;
                else if (row.prefix.startsWith('‡∏î.‡∏ç.') || row.prefix.startsWith('‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß') || row.prefix.startsWith('‡∏ô.‡∏™.') || row.prefix.startsWith('‡∏ô‡∏≤‡∏á')) female++;
                else other++;
                
                (row.like_subjects || '').split(',').forEach(s => {
                    s = s.trim();
                    if (s) likeSubjects[s] = (likeSubjects[s]||0)+1;
                });
                if (!isNaN(parseFloat(row.gpa))) gpaArr.push(parseFloat(row.gpa));
                if (!isNaN(parseFloat(row.last_com_grade))) comArr.push(parseFloat(row.last_com_grade));
            });
            
            let gpaAvg = gpaArr.length ? (gpaArr.reduce((a,b)=>a+b,0)/gpaArr.length).toFixed(2) : 0;
            let comAvg = comArr.length ? (comArr.reduce((a,b)=>a+b,0)/comArr.length).toFixed(2) : 0;
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á worksheet ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
            const statsData = [
                ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'],
                [''],
                ['‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'],
                ['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', res.data.length],
                ['‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ä‡∏≤‡∏¢', male],
                ['‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏ç‡∏¥‡∏á', female],
                ['‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (GPA)', gpaAvg],
                [`‡πÄ‡∏Å‡∏£‡∏î${teacherMajor || '‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå'}‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢`, comAvg],
                [''],
                ['‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ä‡∏≠‡∏ö (Top 5)'],
                ...Object.entries(likeSubjects).sort((a,b)=>b[1]-a[1]).slice(0,5).map(([subj, count]) => [subj, count])
            ];
            
            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.aoa_to_sheet(statsData);
            XLSX.utils.book_append_sheet(wb, ws, '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥');
            
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
            const subjectName = $('#reportSubject option:selected').text().split('(')[0].trim();
            XLSX.writeFile(wb, `‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥_${subjectName}_${new Date().toLocaleDateString('th-TH')}.xlsx`);
        });
    }
    
    function exportAllToExcel(subjectId) {
        $.getJSON('../controllers/StudentAnalyzeController.php?subject_id=' + subjectId, function(res) {
            if (!res.success || !res.data.length) {
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô');
                return;
            }
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Excel
            const headers = [
                '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà', '‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤', '‡∏ä‡∏∑‡πà‡∏≠', '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', '‡∏´‡πâ‡∏≠‡∏á', '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£', '‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å', '‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á',
                '‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß', '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á', '‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏Å‡∏±‡∏ö', '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà', '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á', 
                '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©', '‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢', `‡πÄ‡∏Å‡∏£‡∏î${teacherMajor || '‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå'}`, 
                '‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö', '‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö'
            ];
            
            const data = [headers];
            res.data.forEach(row => {
                data.push([
                    row.student_no, row.prefix, row.student_firstname, row.student_lastname,
                    row.student_level_room, row.student_phone, row.weight, row.height,
                    row.disease, row.parent_name, row.live_with, row.address, row.parent_phone,
                    row.favorite_activity, row.special_skill, row.gpa, row.last_com_grade,
                    row.like_subjects, row.dislike_subjects
                ]);
            });
            
            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.aoa_to_sheet(data);
            XLSX.utils.book_append_sheet(wb, ws, '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô');
            
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
            const subjectName = $('#allSubject option:selected').text().split('(')[0].trim();
            XLSX.writeFile(wb, `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô_${subjectName}_${new Date().toLocaleDateString('th-TH')}.xlsx`);
        });
    }

    function printReportSection(section, subjectName, subjectCode, level, reportType) {
        // ‡πÅ‡∏õ‡∏•‡∏á charts ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå
        const charts = section.querySelectorAll('canvas');
        const chartImages = [];
        
        // ‡πÅ‡∏õ‡∏•‡∏á canvas ‡πÄ‡∏õ‡πá‡∏ô image
        charts.forEach((canvas, index) => {
            if (canvas && canvas.getContext) {
                const dataURL = canvas.toDataURL('image/png');
                chartImages.push({
                    id: canvas.id,
                    dataURL: dataURL,
                    width: canvas.offsetWidth,
                    height: canvas.offsetHeight
                });
            }
        });
        
        // Clone section ‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà canvas ‡∏î‡πâ‡∏ß‡∏¢ img
        const clonedSection = section.cloneNode(true);
        const clonedCharts = clonedSection.querySelectorAll('canvas');
        
        clonedCharts.forEach((canvas, index) => {
            if (chartImages[index]) {
                const img = document.createElement('img');
                img.src = chartImages[index].dataURL;
                img.style.width = '100%';
                img.style.height = 'auto';
                img.style.maxWidth = '300px';
                img.style.maxHeight = '200px';
                canvas.parentNode.replaceChild(img, canvas);
            }
        });
        
        const printWindow = window.open('', '', 'width=900,height=700');
        const headerHTML = `
            <div style="text-align: center; margin-bottom: 20px; border-bottom: 2px solid #333; padding-bottom: 15px;">
                <div style="display: flex; align-items: center; justify-content: center; gap: 15px; margin-bottom: 10px;">
                    <img src="../assets/images/logo.png" alt="‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô" style="width: 60px; height: 60px;" onerror="this.style.display='none'">
                    <div>
                        <h1 style="font-size: 20px; font-weight: bold; margin: 0; color: #1e40af;">‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏¥‡∏ä‡∏±‡∏¢</h1>
                        <p style="font-size: 14px; margin: 3px 0; color: #374151;">‡πÅ‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</p>
                    </div>
                </div>
                <div style="text-align: left; max-width: 500px; margin: 0 auto;">
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; font-size: 12px;">
                        <div><strong>‡∏ß‡∏¥‡∏ä‡∏≤:</strong> ${subjectName}</div>
                        <div><strong>‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤:</strong> ${subjectCode}</div>
                        <div><strong>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô:</strong> ‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà ${level}</div>
                        <div><strong>‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô:</strong> ${teacherName}</div>
                    </div>
                    <div style="margin-top: 8px; font-size: 12px;">
                        <strong>‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:</strong> ${teacherMajor || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                    </div>
                    <div style="margin-top: 8px; text-align: center;">
                        <strong style="font-size: 14px; color: #1e40af;">${reportType}</strong>
                    </div>
                </div>
            </div>
        `;
        
        printWindow.document.write(`
            <html>
            <head>
                <title>‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô - ${reportType}</title>
                <style>
                    body { 
                        font-family: 'Sarabun', sans-serif; 
                        margin: 15px;
                        line-height: 1.3;
                        font-size: 12px;
                    }
                    @page { 
                        margin: 1cm; 
                        size: A4;
                    }
                    @media print {
                        .no-print, button { 
                            display: none !important; 
                        }
                        .page-break {
                            page-break-before: always;
                        }
                        .avoid-break {
                            page-break-inside: avoid;
                        }
                    }
                    table { 
                        border-collapse: collapse; 
                        width: 100%; 
                        font-size: 10px;
                    }
                    th, td { 
                        border: 1px solid #333; 
                        padding: 3px 4px; 
                        text-align: left;
                    }
                    th { 
                        background-color: #f3f4f6; 
                        font-weight: bold;
                        text-align: center;
                    }
                    .text-center { 
                        text-align: center; 
                    }
                    img {
                        max-width: 100%;
                        height: auto;
                        display: block;
                        margin: 0 auto;
                    }
                    
                    /* Grid Layout for Charts */
                    .grid {
                        display: grid;
                    }
                    .grid-cols-1 {
                        grid-template-columns: 1fr;
                    }
                    .grid-cols-2 {
                        grid-template-columns: 1fr 1fr;
                    }
                    .grid-cols-3 {
                        grid-template-columns: 1fr 1fr 1fr;
                    }
                    .grid-cols-4 {
                        grid-template-columns: 1fr 1fr 1fr 1fr;
                    }
                    .gap-4 {
                        gap: 10px;
                    }
                    .gap-6 {
                        gap: 15px;
                    }
                    .gap-8 {
                        gap: 20px;
                    }
                    
                    /* Chart specific styles */
                    .chart-container {
                        page-break-inside: avoid;
                        margin-bottom: 15px;
                        text-align: center;
                    }
                    .chart-row {
                        display: grid;
                        grid-template-columns: 1fr 1fr;
                        gap: 20px;
                        margin-bottom: 15px;
                        page-break-inside: avoid;
                    }
                    .chart-item {
                        text-align: center;
                    }
                    .chart-item h3 {
                        font-size: 14px;
                        font-weight: bold;
                        margin-bottom: 10px;
                    }
                    .chart-item img {
                        max-width: 100%;
                        max-height: 180px;
                        width: auto;
                        height: auto;
                    }
                    .chart-details {
                        font-size: 11px;
                        margin-top: 8px;
                        text-align: left;
                    }
                    
                    /* Stats Grid */
                    .stats-grid {
                        display: grid;
                        grid-template-columns: repeat(4, 1fr);
                        gap: 10px;
                        margin: 15px 0;
                    }
                    .stats-card {
                        border: 1px solid #d1d5db;
                        border-radius: 6px;
                        padding: 10px;
                        text-align: center;
                    }
                    .stats-title {
                        font-size: 11px;
                        font-weight: bold;
                        margin-bottom: 5px;
                    }
                    .stats-value {
                        font-size: 18px;
                        font-weight: bold;
                    }
                    
                    /* Other sections */
                    .info-grid {
                        display: grid;
                        grid-template-columns: 1fr 1fr;
                        gap: 15px;
                        margin: 15px 0;
                    }
                    .info-card {
                        border: 1px solid #d1d5db;
                        border-radius: 6px;
                        padding: 10px;
                    }
                    .info-title {
                        font-size: 12px;
                        font-weight: bold;
                        margin-bottom: 8px;
                    }
                    .info-content {
                        font-size: 11px;
                    }
                    
                    .bottom-grid {
                        display: grid;
                        grid-template-columns: 1fr 1fr 1fr;
                        gap: 10px;
                        margin: 15px 0;
                    }
                    
                    /* Responsive adjustments */
                    .rounded { border-radius: 4px; }
                    .p-4 { padding: 10px; }
                    .mb-2 { margin-bottom: 8px; }
                    .mt-8 { margin-top: 15px; }
                    .text-sm { font-size: 11px; }
                    .font-bold { font-weight: 700; }
                    .font-semibold { font-weight: 600; }
                    
                    /* Background colors */
                    .bg-blue-50 { background-color: #eff6ff; }
                    .bg-green-50 { background-color: #f0fdf4; }
                    .bg-yellow-50 { background-color: #fefce8; }
                    .bg-purple-50 { background-color: #faf5ff; }
                    .bg-orange-50 { background-color: #fff7ed; }
                    .bg-pink-50 { background-color: #fdf2f8; }
                    .bg-gray-50 { background-color: #f9fafb; }
                    .bg-cyan-50 { background-color: #ecfeff; }
                    .bg-indigo-50 { background-color: #eef2ff; }
                    
                    /* Text colors */
                    .text-blue-700 { color: #1d4ed8; }
                    .text-green-700 { color: #15803d; }
                    .text-yellow-700 { color: #a16207; }
                    .text-purple-700 { color: #7c3aed; }
                    .text-orange-700 { color: #c2410c; }
                    .text-pink-700 { color: #be185d; }
                    .text-gray-700 { color: #374151; }
                    .text-cyan-700 { color: #0e7490; }
                    .text-indigo-700 { color: #4338ca; }
                    .text-blue-600 { color: #2563eb; }
                    .text-green-600 { color: #16a34a; }
                    .text-yellow-600 { color: #ca8a04; }
                    .text-purple-600 { color: #9333ea; }
                    
                    .text-3xl { font-size: 18px; line-height: 1.2; }
                    .font-extrabold { font-weight: 800; }
                </style>
            </head>
            <body>
                ${headerHTML}
                <div style="margin-top: 15px;">
                    ${clonedSection.innerHTML}
                </div>
                <div style="margin-top: 20px; text-align: center; font-size: 10px; color: #666; border-top: 1px solid #ddd; padding-top: 8px;">
                    <p>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏¥‡∏ä‡∏ç‡∏≤‡∏ò‡∏¥‡∏Å‡∏≤‡∏£</p>
                </div>
            </body>
            </html>
        `);
        
        printWindow.document.close();
        
        // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå
        setTimeout(() => {
            printWindow.print();
        }, 1000);
    }

    function printSection(section) {
        // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤
        const printWindow = window.open('', '', 'width=900,height=700');
        printWindow.document.write('<html><head><title>‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</title>');
        printWindow.document.write('<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">');
        printWindow.document.write('<style>body{font-family:sans-serif;}</style>');
        printWindow.document.write('</head><body>');
        printWindow.document.write(section.innerHTML);
        printWindow.document.write('</body></html>');
        printWindow.document.close();
        setTimeout(() => printWindow.print(), 400);
    }

    // ...existing code...
});
</script>
<?php require_once('script.php'); ?>
</body>
</html>
